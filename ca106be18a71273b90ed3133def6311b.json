{"posts": [{"title": "junit\u4e0b\u6d4b\u8bd5\u7528\u4f8b\u4f7f\u7528\u7ebf\u7a0b\u6c60\u95ee\u9898", "date": "2022-07-10T16:33:00-00.00", "path": "/archives/junit-multi-thread-problem/", "text": "\u95ee\u9898\u8d77\u56e0\n\u6709\u4e00\u6b21\u8981\u6d4b\u8bd5\u4e0b\u591a\u7ebf\u7a0b\u5220\u9664redis\u6570\u636e\uff0c\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u8fb9\u754c\u6761\u4ef6\u6ca1\u63a7\u5236\u597d\u5565\u7684\uff0c\u5bfc\u81f4\u591a\u5220\u6570\u636e\u4e86\uff0c\u6211\u5c31\u60f3\u7740\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f7f\u7528\u7ebf\u7a0b\u6c60\u53bb\u6a21\u62df\u591a\u7ebf\u7a0b\u5220\u9664\u7684\u573a\u666f\u3002\n\u539f\u4ee5\u4e3a\u662f\u4e2a\u5f88\u7b80\u5355\u7684\u573a\u666f\uff0c\u7ed3\u679c\u591a\u7ebf\u7a0b\u548b\u6574\u90fd\u6709\u95ee\u9898\u3002\n\u4e0b\u9762\u4e0a\u4e2a\u5bf9\u6bd4\u7684\u4ee3\u7801\uff0c\u5355\u7ebf\u7a0b\u548c\u591a\u7ebf\u7a0b\u8bbf\u95ee\u6267\u884c\uff0c\u4ee5redis\u67e5\u8be2\u4e3a\u4f8b\u3002\nimport com.google.common.util.concurrent.ThreadFactoryBuilder;\nimport com.zto.titans.zim.service.ServiceApplication;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.StringRedisTemplate;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport java.util.Objects;\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.concurrent.ThreadPoolExecutor;\nimport java.util.concurrent.TimeUnit;\n\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = ServiceApplication.class)\npublic class BigKeysTest {\n    @Autowired\n    private StringRedisTemplate stringRedisTemplate;\n    private final String key = &quot;test_set_add_4&quot;;\n\n    private final ThreadPoolExecutor CLEAN_TASK_EXECUTOR = new ThreadPoolExecutor(2, 4, 60, TimeUnit.SECONDS,\n            new ArrayBlockingQueue&lt;&gt;(10), new ThreadFactoryBuilder().setNameFormat(&quot;sorted-set-clean-task-%d&quot;).build());\n\n\n  @Test\n    public void testCard() {\n        Long count = redisTemplate.opsForZSet().zCard(key);\n        System.out.println(count);\n    }\n\n\n    @Test\n    public void multiCard() throws InterruptedException {\n        for (int i = 0; i &lt; 2; i++) {\n            CLEAN_TASK_EXECUTOR.execute(() -&gt; {\n                try {\n                    Long countOfZset = redisTemplate.opsForZSet().zCard(key);\n                    System.out.println(countOfZset);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n        System.out.println(&quot;end&quot;);\n    }\n\n    @Test\n    public void testAddAndGet() {\n        redisTemplate.opsForZSet().zCard(key);\n\n    }\n}\n\n\u5206\u522b\u6267\u884ctestCard()\u548cmultiCard2\u4e2a\u7528\u4f8b\uff0c\u4f1a\u53d1\u73b0testCard\u4f1a\u987a\u5229\u6253\u5370zset key\u7684\u5143\u7d20\u6570\u91cf\uff0c\u800cmultiCard\u53ea\u4f1a\u6253\u5370\u4e00\u4e2aend\uff0c\u4e5f\u4e0d\u4f1a\u6253\u5370\u6570\u91cf\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u62a5\u9519\u3002\nimage-20220710113010666\n\u65ad\u70b9\u6267\u884c\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u9519\u8bef\nimage-20220710113131178\n\u4e0a\u9762\u662f\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0cdebug\u83b7\u5f97\u7684\u9519\u8bef\uff0c\u6211\u7b2c\u4e00\u6b21\u9047\u5230\u7684\u9519\u8bef\u4fe1\u606f\u662f\u8fd9\u4e2a,\u65e0\u6cd5\u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5\uff0c\u7ed9\u6211\u4e00\u987f\u6298\u78e8\n\norg.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisException: Cannot retrieve initial cluster partitions from initial URIs [RedisURI [host='10.7.100.100', port=6381], RedisURI [host='10.7.100.101', port=6381], RedisURI [host='10.7.100.101', port=6382], RedisURI [host='10.7.100.100', port=6382]]\n\u95ee\u9898\u5206\u6790\n\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u662f\u6211\u7684redis cluster\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4f46\u662f\u8bd5\u4e86\u597d\u51e0\u6b21testCard()\u65b9\u6cd5\u90fd\u6ca1\u95ee\u9898\uff0c\u540e\u6765\u6211\u5c31\u53bb\u641c\u4e86\u4e00\u4e0b\uff0c\u7136\u540e\u53d1\u73b0junit\u6267\u884c\u5b8c\u4f1a\u6267\u884c\u76f4\u63a5\u9000\u51fa\uff0c\u800c\u4e0d\u662f\u7b49\u5230\u6240\u6709\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u624d\u4f1a\u9000\u51fa\n\u518d\u6765\u590d\u4e60\u4e0bjvm\u9000\u51fa\u7684\u6761\u4ef6\uff0c\u4e00\u822c\u67092\u4e2a\u6761\u4ef6\n\njvm\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u90fd\u662f\u5b88\u62a4\u7ebf\u7a0b\n\u8c03\u7528System.exit()\u6267\u884c\u9000\u51fa\n\njunit\u5c31\u662f\u5728main\u65b9\u6cd5\u6267\u884c\u5b8c\u4e4b\u540e\u8c03\u7528\u4e86System.exit()\u76f4\u63a5\u9000\u51fa\u4e86\uff0c\u800c\u4e0d\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\nimage-20220710151758587\n\u89e3\u51b3\u65b9\u6cd5\n\u89e3\u51b3\u65b9\u6cd5\u6709\u51e0\u79cd\uff0c\u6838\u5fc3\u76ee\u7684\u90fd\u662f\u4e3a\u4e86\u8ba9main\u7ebf\u7a0b\u7b49\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u518d\u9000\u51fa\uff0c\u6709\u4e0b\u9762\u51e0\u79cd\u65b9\u6cd5\n\nThread.sleep(1000)\uff0c\u8ba9main\u7ebf\u7a0b\u7761\u4e00\u4f1a\uff0c\u5b50\u7ebf\u7a0b\u5f97\u4ee5\u6267\u884c\nThread.join()\uff0c\u4e0d\u8fc7join\u7684\u8bdd\u4e0d\u80fd\u7528\u7ebf\u7a0b\u6c60\uff0c\u81ea\u5df1new Thread()\uff0c\u83b7\u53d6\u7ebf\u7a0b\u7684\u5f15\u7528\n\u4f7f\u7528CountDownLatch\uff0c\u7b49\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u4e86\u518d\u53bb\u6267\u884cmain\u7ebf\u7a0b\n\n\u5173\u4e8eThread.join()\uff0c\u7531\u4e8e\u6211\u662f\u7528\u7684\u7ebf\u7a0b\u6c60\uff0c\u6ca1\u6709\u624b\u52a8new Thread()\uff0c\u4e0d\u77e5\u9053\u7ebf\u7a0b\u6c60\u6709\u6ca1\u6709\u529e\u6cd5\u505ajoin\uff0c\u6709\u77e5\u9053\u7684\u53ef\u4ee5\u8bc4\u8bba\u533a\u544a\u8bc9\u6211\u4e00\u4e0b\u3002\n\u6211\u662f\u7528\u7684CountDownLatch\uff0c\u7ed9\u4e00\u4e0b\u6211\u7684CountDownLatch\u7684\u793a\u4f8b\n@Test\npublic void multiCard() {\n        CountDownLatch countDownLatch = new CountDownLatch(2);\n        for (int i = 0; i &lt; 2; i++) {\n            CLEAN_TASK_EXECUTOR.execute(() -&gt; {\n                try {\n                    Long countOfZset = redisTemplate.opsForZSet().zCard(key);\n                    System.out.println(&quot;zset count: &quot; + countOfZset);\n                    countDownLatch.countDown();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n        try {\n            countDownLatch.await(5, TimeUnit.SECONDS);\n            System.out.println(&quot;count down end&quot;);\n        } catch (InterruptedException e) {\n            //ignore\n        }\n        System.out.println(&quot;end&quot;);\n}\n\n\u770b\u63a7\u5236\u53f0\u8f93\u51fa\uff0c2\u4e2a\u5b50\u7ebf\u7a0b\u6b63\u5e38\u6267\u884c\u5b8c\u4e86\nimage-20220710154259740\n\u53f7\u5916\n\u6211\u7b2c\u4e00\u6b21\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5f53\u5929\u5c31\u6839\u636ejunit+\u591a\u7ebf\u7a0b\u641c\u5230\u4e86\u539f\u56e0\uff0c\u5c31\u662fjunit\u7684main\u65b9\u6cd5\u6267\u884c\u5b8c\u4f1a\u9000\u51fa\u3002\n\u6211\u51fa\u4e8e\u597d\u5947\uff0c\u53c8\u8ddf\u4e86\u4e00\u4e0b\uff0c\u60f3\u770b\u770b\u54ea\u4e2a\u5730\u65b9\u6267\u884c\u7684\u9000\u51fa\u7684\uff0c\u4e0a\u9762\u8d34\u8fc7\u7684\u8fd9\u5f20\u56fe\uff0cdebug\u7684\u65f6\u5019\u6839\u672c\u5c31\u6ca1\u8d70\u8fd9\u91cc\nimage-20220710151758587\n\u4e0b\u9762\u5206\u4eab\u4e0b\u6211\u5728\u627etest\u6267\u884c\u6d41\u7a0b\u7684\u8fc7\u7a0b\u3002\n\u6211\u8fd9\u4e2a\u662f\u4e00\u4e2aSpringBoot\u5de5\u7a0b\uff0c\u7136\u540e\u6bcf\u4e2a\u6d4b\u8bd5\u7c7b\u90fd\u4f1a\u7528\u6253\u4e0a\u4e0b\u97622\u4e2a\u6ce8\u89e3\n\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = ServiceApplication.class)\n\u7136\u540e\u6211\u5148\u627e\u5230\u4e86\u8fd9\u4e2a\u65ad\u70b9\u4f4d\u7f6eorg.springframework.test.context.junit4.SpringJUnit4ClassRunner#run\nimage-20220710155256627\n\u7136\u540e\u987a\u7740\u8fd9\u4e2a\u65b9\u6cd5\u5f80\u4e0a\u627e\uff0c\u4e0a\u5c42\u8c03\u7528\u4f4d\u7f6e\u662forg.junit.runner.JUnitCore#run(org.junit.runner.Runner)\nimage-20220710155438424\n\u4f46\u662f\u987a\u7740JUnitCore#run\u5f80\u4e0a\u627e\u8c03\u7528\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e0a\u5c42\u8c03\u7528\u76842\u4e2a\u5730\u65b9\u65ad\u70b9\u6839\u672c\u90fd\u4e0d\u4f1a\u8fdb\nimage-20220710155816570\n\u7136\u540e\u6211\u5728debug\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u5f80\u524d\u7684\u6309\u94ae\uff0c\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u5c31\u53ef\u4ee5\u56de\u5230\u6700\u6700\u5f00\u59cb\u7684\u5165\u53e3\nback\n\u5c31\u662f\u8fd9\u4e2a\u7c7bcom.intellij.rt.junit.JUnitStarter\uff0c\u4f46\u662f\u6211\u5728idea\u91cc\u6ca1\u6709\u770b\u5230\u76f8\u5173\u7684\u6e90\u7801\u3002\n\u540e\u6765\u6211\u53c8\u641c\u4e86\u4e00\u4e0b\uff0c\u5728github\u4e0a\u641c\u5230\u4e86\u4e00\u4e2a\u7c7b\u6587\u4ef6\uff0c\u8fd9\u4e2a\u7c7b\u6587\u4ef6\u7684main\u65b9\u6cd5\u6700\u540e\u4e5f\u662f\u6267\u884c\u4e86System.exit()\nimage-20220710161335317\ngithub\u7c7b\u6587\u4ef6\u5730\u5740\n\u8fd9\u4e2a\u53ef\u80fd\u662fidea\u81ea\u5df1\u5bf9junit\u505a\u4e86\u5c01\u88c5\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u6211\u6682\u65f6\u6ca1\u6709\u63a2\u7d22\u5230\uff0c\u6709\u77e5\u9053\u7684\u4e5f\u53ef\u4ee5\u8bc4\u8bba\u533a\u544a\u8bc9\u6211\n\u540e\u8bb0\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u662f\u4e2a\u8bf4\u5927\u4e0d\u5927\uff0c\u8bf4\u5c0f\u4e0d\u5c0f\u7684\u95ee\u9898\uff0c\u5982\u679c\u5bf9junit\u548cjvm\u7684\u9000\u51fa\u673a\u5236\u4e86\u89e3\u4e0d\u662f\u5f88\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u548c\u6211\u72af\u4e00\u6837\u7684\u9519\u8bef\uff0c\u6d6a\u8d39\u51e0\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u5728\u90a3debug\u3002\n\u6211debug\u7684\u8fc7\u7a0b\u4e2d\uff0c\u751a\u81f3debug\u5230\u4e86netty\u7684worker\u5173\u95ed\u7684\u4ee3\u7801\uff0c\u6211\u751a\u81f3\u90fd\u5728\u6000\u7591\uff0cnetty\u51fa\u95ee\u9898\u4e86???\n\u540e\u6765\u5b9e\u9645\u8bc1\u660e\u662f\u6211\u81ea\u5df1\u60f3\u591a\u4e86\u3002\n\u4e0d\u8fc7\u4e5f\u4e0d\u80fd\u8bf4\u8e29\u5751\u4e0d\u597d\u5427\uff0c\u751f\u6d3b\u603b\u662f\u5728\u8d9f\u8fc7\u4e00\u4e2a\u53c8\u4e00\u4e2a\u6216\u5927\u6216\u5c0f\u7684\u5751\u4e2d\u8fc7\u53bb\u7684\u3002\n\u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u5c06\u9047\u5230\u7684\u6bcf\u4e00\u4e2a\u5751\u548c\u632b\u6298\u8e29\u5728\u811a\u4e0b\uff0c\u5feb\u4e50\u6210\u957f\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "junit", "slug": "junit", "permalink": "/tag/junit/"}, {"name": "multi thread", "slug": "multi thread", "permalink": "/tag/multi thread/"}]}, {"title": "\u83f2\u5b9d\u751f\u65e5\u5feb\u4e50", "date": "2022-05-30T21:12:00-00.00", "path": "/archives/happy-birthday-2-fayy/", "text": "\u83f2\u5b9d\u768426\u5c81\u751f\u65e5\n\u65f6\u5149\u5982\u68ad\uff0c\u767d\u9a79\u8fc7\u9699\uff0c\u65f6\u95f4\u6765\u5230\u4e86\u83f2\u5b9d\u768426\u5c81\u751f\u65e5\uff0c\u8fd9\u4e00\u5929\u4e0d\u53ea\u662f\u4e2a\u751f\u65e5\uff0c\u4e5f\u662f\u83f2\u5b9d\u9010\u6b65\u8d70\u5411\u6210\u719f\u7684\u4e00\u4e2a\u6807\u5fd7\u6027\u65f6\u95f4\u3002\n\u5b9d\uff0c\u751f\u65e5\u5feb\u4e50\u54e6\uff0c\u6211\u8fd9\u53bb\u4e0d\u4e86\uff0c\u5728\u4f6026\u5c81\u6210\u5e74\u8fd9\u4e00\u5929\u7559\u4e0b\u4e86\u4e00\u4e9b\u9057\u61be\uff0c\u5bf9\u4e0d\u8d77\uff0c\u6211\u7684\u5b9d\u3002\n\u5728\u8fd9\u91cc\u8e66\u5e8a\u7ed9\u83f2\u5b9d\u5531\u4e00\u9996\u6b4c\uff1ahappy birthday to you, happy birthday to you, happy birthday to you.\n\u8e66\u5e8a\u7684\u521b\u4f5c\n\u4e3a\u4e86\u7ed9\u83f2\u5b9d\u5e86\u795d\u751f\u65e5\uff0c\u5728\u8e66\u5e8a\u4e0e\u83f2\u5b9d\u7684\u503e\u529b\u5408\u4f5c\u4e0b\uff0c\u521b\u4f5c\u51fa\u4e86\u5982\u4e0b\u516b\u5e45\u56fe\uff0c\u4e0d\u4ec5\u662f\u9f9f\u5154\u4e4b\u95f4\u7684\u6545\u4e8b\uff0c\u4e5f\u662f\u8e66\u5e8a\u548c\u83f2\u5b9d\u4e4b\u95f4\u7684\u7231\u60c5\u8c61\u5f81\u3002\n\u6765\u4e00\u8d77\u5728\u56de\u987e\u4e00\u4e0b\u8fd9\u516b\u5f20\u56fe\u5427\uff0c\u4f7f\u7528\u4e862\u6b3e\u4e0d\u540c\u7684\u753b\u56fe\u5de5\u5177\uff0cblender\u548ckrita, krita\u611f\u89c9\u62ff\u6765\u753b\u56fe\u66f4\u597d\u4e00\u70b9\u3002\n\u7b2c\u4e00\u5f20\u5c31\u662f\u4e4c\u9f9f\u9a91\u5154\u5b50\uff0c\u5c0f\u5154\u5b50\u9a91\u7740\u5c0f\u4e4c\u9f9f\uff0c\u975e\u5e38\u7684\u9738\u6c14\uff0c\u867d\u7136\u5634\u753b\u7684\u6709\u70b9\u6b6a\uff0c\u4e0d\u8fc7\u95ee\u9898\u4e0d\u5927\u3002\n\n\u539f\u56fe\u662f\u8fd9\u4e2a,\u4e24\u76f8\u5bf9\u6bd4\u4e4b\u4e0b\uff0c\u7075\u9b42\u753b\u624b\u7684\u529f\u529b\uff0c\u53ef\u89c1\u4e00\u6591\u3002\n\n\u7b2c2\u4f4d\u51fa\u573a\u7684\u9009\u624b\u662f\u5c0f\u5154\u5b50\u80cc\u9f9f\u58f3\uff0c\u5e76\u4e14\u624b\u62ff\u9e3d\u5b50\u86cb\u5927\u5c0f\u7684\u94bb\u6212\uff0c\u8fd9\u4e2a\u539f\u56fe\u51fa\u73b0\u5728\u9648\u641e\u641e\u7684\u89c6\u9891\u91cc\uff0c\u521b\u4f5c\u7684\u8fd8\u884c\n\n\u539f\u56fe\n\n\u7b2c3\u4f4d\u9009\u624b\u662f\u5c0f\u4e4c\u9f9f\u7ed9\u5c0f\u5154\u5b50\u9001\u82b1\uff0c\u8fd9\u4e2a\u753b\u7684\u5c31\u66f4\u52a0\u6709\u7075\u9b42\u4e86\uff0c\u8fd8\u6709\u4e2a\u5df4\u638c\u5927\u7684\u6212\u6307\n\n\u539f\u56fe\n\n\u7b2c4\u4f4d\u9009\u624b\u662f\u4e56\u5de7\u7684\u5c0f\u5154\u5b50\uff0c\u5750\u7740\uff0c\u62ff\u8fd9\u4e00\u675f\u82b1\uff0c\u5b9d\uff0c\u4e56\u5de7\u54e6\n\n\u539f\u56fe\n\n\u7b2c\u4e94\u4f4d\u9009\u624b\u662f\u8df3\u8df3\u5154\uff0c\u7531\u4e8e\u5bf9\u5de5\u5177\u4f7f\u7528\u4e0d\u719f\u7ec3\uff0c\u5bfc\u81f4\u5c0f\u4e4c\u9f9f\u6ca1\u6709\u4e0a\u53bb\n\n\u539f\u56fe\n\n\u7b2c6\u4f4d\u9009\u624b\u662f\u9f9f\u5154\u8d5b\u8dd1\uff0c\u8fd9\u6b21\u5c0f\u5154\u5b50\u594b\u53d1\u56fe\u5f3a\uff0c\u7ec8\u4e8e\u5728\u6bd4\u8d5b\u4e2d\u8d62\u5f97\u4e86\u80dc\u5229\n\n\u539f\u56fe\n\n\u7b2c7\u4f4d\u9009\u624b\u662f\u4e4c\u9f9f\u9a6e\u7740\u5c0f\u5154\u5b50\uff0c\u8fd9\u662f\u76ee\u524d\u753b\u7684\u6bd4\u8f83\u597d\u7684\u4e00\u5f20\u4e86\uff0c\u4e0d\u8fc7\u4e0a\u8272\u4e0a\u7684\u4e0d\u5747\u5300\uff0c\u4e0b\u6b21\u4e0a\u7684\u5747\u5300\u4e00\u4e9b\n\n\u539f\u56fe\n\n\u6765\u5230\u4e86\u7b2c8\u4f4d\u9009\u624b\u4e86,\u7b2c8\u4f4d\u9009\u624b\u662f\u4e4c\u9f9f\u7275\u7740\u5c0f\u5154\u5b50\u7684\u624b\uff0c\u5c0f\u624b\u62c9\u5927\u624b\uff0c\u4e00\u8d77\u5411\u524d\u8d70\n\n\u539f\u56fe\n\n\u7b2c9\u4f4d\u9009\u624b\uff0c\u5c0f\u4e4c\u9f9f\u548c\u5c0f\u5154\u5b50\u771f\u4eba\u51fa\u5883\uff0c\u5f00\u5e55\u96f7\u51fb\uff0c\u5e05\u778e\u89c2\u4f17\u4eec\u7684\u949b\u5408\u91d1\u72d7\u773c\n\n\u957f\u957f\u4e45\u4e45\n\u6211\u4eec\u4e00\u8d77\u8fc7\u7684\u7b2c3\u4e2a\u751f\u65e5\uff0c\u6211\u4eec\u540e\u9762\u8fd8\u4f1a\u5728\u4e00\u8d77\u8fc7\u597d\u591a\u751f\u65e5\u3002\n\u7231\u4f60\u54e6\u5b9d\uff0c\u7231\u6211\u7684\u8bdd\uff0c\u7ed9\u6211\u56de\u7b54\uff0c\u6211\u4eec\u7684\u7231\u5440\u7231\u5440\u6ca1\u65f6\u5dee\u3002\n\u6b64\u81f4\uff0c\u656c\u793c\uff0c\u8e66\u5e8a\uff0c2022\u5e7405\u670830\u65e5\u4e8e\u4e0a\u6d77\u9752\u6d66\u534e\u65b0\u3002\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "birthday", "slug": "birthday", "permalink": "/tag/birthday/"}, {"name": "fayy", "slug": "fayy", "permalink": "/tag/fayy/"}, {"name": "thend03", "slug": "thend03", "permalink": "/tag/thend03/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: whenvertobefc@outlook.com (replace # with @)\n", "categories": [], "tags": []}]}