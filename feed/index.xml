<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>thend03's blog</title><link>/</link><description>宝宝宝</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/logo.png</url><title>thend03's blog</title><link>/</link></image><language>zh-CN</language><lastBuildDate>Fri, 22 Jul 2022 09:26:05 +0806</lastBuildDate><pubDate>Fri, 22 Jul 2022 09:26:05 +0806</pubDate><item><title>菲宝生日快乐</title><link>/archives/happy-birthday-2-fayy/</link><description>&lt;h2&gt;菲宝的26岁生日&lt;/h2&gt;
&lt;p&gt;时光如梭，白驹过隙，时间来到了菲宝的26岁生日，这一天不只是个生日，也是菲宝逐步走向成熟的一个标志性时间。&lt;/p&gt;
&lt;p&gt;宝，生日快乐哦，我这去不了，在你26岁成年这一天留下了一些遗憾，对不起，我的宝。&lt;/p&gt;
&lt;p&gt;在这里蹦床给菲宝唱一首歌：happy birthday to you, happy birthday to you, happy birthday to you.&lt;/p&gt;
&lt;h2&gt;蹦床的创作&lt;/h2&gt;
&lt;p&gt;为了给菲宝庆祝生日，在蹦床与菲宝的倾力合作下，创作出了如下八幅图，不仅是龟兔之间的故事，也是蹦床和菲宝之间的爱情象征。&lt;/p&gt;
&lt;p&gt;来一起在回顾一下这八张图吧，使用了2款不同的画图工具，blender和krita, krita感觉拿来画图更好一点。&lt;/p&gt;
&lt;p&gt;第一张就是乌龟骑兔子，小兔子骑着小乌龟，非常的霸气，虽然嘴画的有点歪，不过问题不大。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1920" data-height="1080" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/76e5a1952b173baad6b2e37e08274ec2.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图是这个,两相对比之下，灵魂画手的功力，可见一斑。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="500" data-height="461" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/b9f227b48c4defa3b9667b855908bccf.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第2位出场的选手是小兔子背龟壳，并且手拿鸽子蛋大小的钻戒，这个原图出现在陈搞搞的视频里，创作的还行&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1920" data-height="1080" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/e62b359e2636fa1c8bfef27f1cf7cb63.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="614" data-height="797" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/4a1918fba9b29e5d891509b32bacf92f.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第3位选手是小乌龟给小兔子送花，这个画的就更加有灵魂了，还有个巴掌大的戒指&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1920" data-height="1080" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/4677ee5d0feb92487b7c201a9af2507f.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1000" data-height="1000" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/e55ed992b809ac21a67c373958838e84.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第4位选手是乖巧的小兔子，坐着，拿这一束花，宝，乖巧哦&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2480" data-height="3508" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/4cf85df94f5117503fd2274e3fd9ab4b.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1500" data-height="1500" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/bfceb517a901d5d0be94ae75c4d9efd4.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第五位选手是跳跳兔，由于对工具使用不熟练，导致小乌龟没有上去&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="4000" data-height="4000" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/825f1eca8a1a0e2fc25ba304adca99fb.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1500" data-height="1500" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/8fbafac0240d1db633dfdc8f151d67ad.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第6位选手是龟兔赛跑，这次小兔子奋发图强，终于在比赛中赢得了胜利&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="10000" data-height="10000" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/802a95f792fe9439b2dc79c789f1ae75.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="900" data-height="600" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/2a6215f4c74ef3bec3b232e19a08b955.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第7位选手是乌龟驮着小兔子，这是目前画的比较好的一张了，不过上色上的不均匀，下次上的均匀一些&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="10000" data-height="10000" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/f18d9aded7b7183d462ee529d2a7177a.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1086" data-height="902" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/e4eecdd942f2e8be5233ec34eb59c149.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;来到了第8位选手了,第8位选手是乌龟牵着小兔子的手，小手拉大手，一起向前走&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1754" data-height="1077" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/3e39c643088ea08e9bfc638f8aa21f5d.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原图&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="502" data-height="336" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/447c861ad996a17345d1df097e8cad4b.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第9位选手，小乌龟和小兔子真人出境，开幕雷击，帅瞎观众们的钛合金狗眼&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1080" data-height="1440" src="https://cdn.jsdelivr.net/gh/thend03/blog-maverick@gh-pages/archives/assets/5d296ebf3800f8fa5926380eb4bac6bc.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;长长久久&lt;/h2&gt;
&lt;p&gt;我们一起过的第3个生日，我们后面还会在一起过好多生日。&lt;/p&gt;
&lt;p&gt;爱你哦宝，爱我的话，给我回答，我们的爱呀爱呀没时差。&lt;/p&gt;
&lt;p&gt;此致，敬礼，蹦床，2022年05月30日于上海青浦华新。&lt;/p&gt;
</description><author>thend03@163.com (thend03)</author><guid isPermaLink="true">/archives/happy-birthday-2-fayy/</guid><pubDate>Mon, 30 May 2022 21:12:00 +0806</pubDate></item><item><title>junit下测试用例使用线程池问题</title><link>/archives/junit-multi-thread-problem/</link><description>&lt;h2&gt;问题起因&lt;/h2&gt;
&lt;p&gt;有一次要测试下多线程删除redis数据，会不会有问题，比如边界条件没控制好啥的，导致多删数据了，我就想着写一个测试用例，使用线程池去模拟多线程删除的场景。&lt;/p&gt;
&lt;p&gt;原以为是个很简单的场景，结果多线程咋整都有问题。&lt;/p&gt;
&lt;p&gt;下面上个对比的代码，单线程和多线程访问执行，以redis查询为例。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;com.google.common.util.concurrent.ThreadFactoryBuilder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;com.zto.titans.zim.service.ServiceApplication&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.Test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.runner.RunWith&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.boot.test.context.SpringBootTest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.data.redis.core.RedisTemplate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.data.redis.core.StringRedisTemplate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.test.context.junit4.SpringRunner&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.util.Objects&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.util.concurrent.ArrayBlockingQueue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.util.concurrent.ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.util.concurrent.TimeUnit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="nd"&gt;@RunWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SpringRunner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nd"&gt;@SpringBootTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ServiceApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BigKeysTest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nd"&gt;@Autowired&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;StringRedisTemplate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stringRedisTemplate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test_set_add_4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CLEAN_TASK_EXECUTOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TimeUnit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SECONDS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ArrayBlockingQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ThreadFactoryBuilder&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;setNameFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sorted-set-clean-task-%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Test&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;testCard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;redisTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;opsForZSet&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;zCard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nd"&gt;@Test&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;multiCard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;InterruptedException&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;CLEAN_TASK_EXECUTOR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;Long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;countOfZset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;redisTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;opsForZSet&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;zCard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;countOfZset&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nd"&gt;@Test&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;testAddAndGet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;redisTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;opsForZSet&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;zCard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分别执行testCard()和multiCard2个用例，会发现testCard会顺利打印zset key的元素数量，而multiCard只会打印一个end，也不会打印数量，也没有任何报错。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2704" data-height="474" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101130699.png" alt="image-20220710113010666" /&gt;&lt;figcaption&gt;image-20220710113010666&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;断点执行，可以获取到错误&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2422" data-height="754" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101131201.png" alt="image-20220710113131178" /&gt;&lt;figcaption&gt;image-20220710113131178&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是我写这篇文章时，debug获得的错误，我第一次遇到的错误信息是这个,无法从连接池获取连接，给我一顿折磨&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisException: Cannot retrieve initial cluster partitions from initial URIs [RedisURI [host='10.7.100.100', port=6381], RedisURI [host='10.7.100.101', port=6381], RedisURI [host='10.7.100.101', port=6382], RedisURI [host='10.7.100.100', port=6382]]&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;问题分析&lt;/h2&gt;
&lt;p&gt;一开始我以为是我的redis cluster出现了问题，但是试了好几次testCard()方法都没问题，后来我就去搜了一下，然后发现junit执行完会执行直接退出，而不是等到所有线程都执行完才会退出&lt;/p&gt;
&lt;p&gt;再来复习下jvm退出的条件，一般有2个条件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jvm中的所有线程都是守护线程&lt;/li&gt;
&lt;li&gt;调用System.exit()执行退出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;junit就是在main方法执行完之后调用了System.exit()直接退出了，而不会等待子线程执行完毕&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2236" data-height="1288" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101517610.png" alt="image-20220710151758587" /&gt;&lt;figcaption&gt;image-20220710151758587&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;解决方法有几种，核心目的都是为了让main线程等子线程执行完再退出，有下面几种方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Thread.sleep(1000)，让main线程睡一会，子线程得以执行&lt;/li&gt;
&lt;li&gt;Thread.join()，不过join的话不能用线程池，自己new Thread()，获取线程的引用&lt;/li&gt;
&lt;li&gt;使用CountDownLatch，等子线程执行完了再去执行main线程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于Thread.join()，由于我是用的线程池，没有手动new Thread()，不知道线程池有没有办法做join，有知道的可以评论区告诉我一下。&lt;/p&gt;
&lt;p&gt;我是用的CountDownLatch，给一下我的CountDownLatch的示例&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@Test&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;multiCard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;CountDownLatch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;countDownLatch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CountDownLatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;CLEAN_TASK_EXECUTOR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;Long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;countOfZset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;redisTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;opsForZSet&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;zCard&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;zset count: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;countOfZset&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;countDownLatch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;countDownLatch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;await&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TimeUnit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SECONDS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;count down end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterruptedException&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;//ignore&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看控制台输出，2个子线程正常执行完了&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2962" data-height="1662" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101542769.png" alt="image-20220710154259740" /&gt;&lt;figcaption&gt;image-20220710154259740&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;号外&lt;/h2&gt;
&lt;p&gt;我第一次遇到这个问题的时候，当天就根据junit+多线程搜到了原因，就是junit的main方法执行完会退出。&lt;/p&gt;
&lt;p&gt;我出于好奇，又跟了一下，想看看哪个地方执行的退出的，上面贴过的这张图，debug的时候根本就没走这里&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2236" data-height="1288" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101517610.png" alt="image-20220710151758587" /&gt;&lt;figcaption&gt;image-20220710151758587&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面分享下我在找test执行流程的过程。&lt;/p&gt;
&lt;p&gt;我这个是一个SpringBoot工程，然后每个测试类都会用打上下面2个注解&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(SpringRunner.class)
@SpringBootTest(classes = ServiceApplication.class)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后我先找到了这个断点位置&lt;code&gt;org.springframework.test.context.junit4.SpringJUnit4ClassRunner#run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="3124" data-height="1568" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101552654.png" alt="image-20220710155256627" /&gt;&lt;figcaption&gt;image-20220710155256627&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后顺着这个方法往上找，上层调用位置是&lt;code&gt;org.junit.runner.JUnitCore#run(org.junit.runner.Runner)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2400" data-height="1372" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101554446.png" alt="image-20220710155438424" /&gt;&lt;figcaption&gt;image-20220710155438424&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是顺着JUnitCore#run往上找调用的时候，发现上层调用的2个地方断点根本都不会进&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="3262" data-height="974" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101558598.png" alt="image-20220710155816570" /&gt;&lt;figcaption&gt;image-20220710155816570&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后我在debug的时候，发现有一个往前的按钮，点击这个按钮就可以回到最最开始的入口&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="3002" data-height="626" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101631838.gif" alt="back" /&gt;&lt;figcaption&gt;back&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就是这个类com.intellij.rt.junit.JUnitStarter，但是我在idea里没有看到相关的源码。&lt;/p&gt;
&lt;p&gt;后来我又搜了一下，在github上搜到了一个类文件，这个类文件的main方法最后也是执行了System.exit()&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="2158" data-height="1130" src="https://cdn.jsdelivr.net/gh/thend03/mdPic/picGo/202207101613352.png" alt="image-20220710161335317" /&gt;&lt;figcaption&gt;image-20220710161335317&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/joewalnes/idea-community/blob/master/plugins/junit_rt/src/com/intellij/rt/execution/junit/JUnitStarter.java"&gt;github类文件地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个可能是idea自己对junit做了封装，更多的细节我暂时没有探索到，有知道的也可以评论区告诉我&lt;/p&gt;
&lt;h2&gt;后记&lt;/h2&gt;
&lt;p&gt;总的来说，这是个说大不大，说小不小的问题，如果对junit和jvm的退出机制了解不是很多的情况下，可能会和我犯一样的错误，浪费几个小时的时间在那debug。&lt;/p&gt;
&lt;p&gt;我debug的过程中，甚至debug到了netty的worker关闭的代码，我甚至都在怀疑，netty出问题了???&lt;/p&gt;
&lt;p&gt;后来实际证明是我自己想多了。&lt;/p&gt;
&lt;p&gt;不过也不能说踩坑不好吧，生活总是在趟过一个又一个或大或小的坑中过去的。&lt;/p&gt;
&lt;p&gt;希望大家都能将遇到的每一个坑和挫折踩在脚下，快乐成长&lt;/p&gt;
</description><author>thend03@163.com (thend03)</author><guid isPermaLink="true">/archives/junit-multi-thread-problem/</guid><pubDate>Sun, 10 Jul 2022 16:33:00 +0806</pubDate></item></channel></rss>